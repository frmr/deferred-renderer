#version 120

/*
 Copyright (C) 2010-2012 Kristian Duske
 
 This file is part of TrenchBroom.
 
 TrenchBroom is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 TrenchBroom is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with TrenchBroom.  If not, see <http://www.gnu.org/licenses/>.
 */

#extension GL_ARB_draw_instanced : require
#extension GL_EXT_gpu_shader4 : require

uniform vec4 Color;
uniform vec3 CameraPosition;
uniform float ScalingFactor;
uniform float MaximumDistance;

varying vec4 vertexColor;

uniform sampler2D position;
uniform int positionSize;

void main(void) {
    vertexColor = Color;
    
    int y = gl_InstanceID / positionSize;
    int x = gl_InstanceID - y * positionSize;
    
    vec4 instancePos = texture2D(position, vec2(x, y) * (1.0 / positionSize));
    float dist = distance(instancePos.xyz, CameraPosition);
    if (dist <= MaximumDistance)
        gl_Position = gl_ModelViewProjectionMatrix * vec4((ScalingFactor * dist * gl_Vertex.xyz + instancePos.xyz), 1.0);
    else
        gl_Position = vec4(99999.0, 99999.0, 99999.0, 1.0);
}
